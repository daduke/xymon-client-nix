#+title: nix package for xymon-client


* Build
#+begin_src bash
nix build git+https://plmlab.math.cnrs.fr/nix/xymon-client.git --accept-flake-config
# => creates result in current directory
#+end_src


* Develop

To modify or inspect the package construction process, you can
create a new shell with tools to build ~xymon-cient~

#+begin_src bash
nix develop git+https://plmlab.math.cnrs.fr/nix/xymon-client.git --accept-flake-config
#+end_src

~stdenvk.mkDerivation~ has the following [[https://github.com/NixOS/nixpkgs/blob/master/pkgs/stdenv/generic/setup.sh#L1556-L1560][phases]] :
- unpackPhase
- patchPhase
- configurePhase
- buildPhase
- checkPhase
- installPhase
- fixupPhase
- installCheckPhase
- distPhase

A phase is a bash function :

#+begin_src bash :dir /tmp/dev :results output
declare -F | grep -E ".*Phase""
#+end_src

#+RESULTS:
: declare -f buildPhase
: declare -f checkPhase
: declare -f configurePhase
: declare -f distPhase
: declare -f fixupPhase
: declare -f installCheckPhase
: declare -f installPhase
: declare -f patchPhase
: declare -f showPhaseFooter
: declare -f showPhaseHeader
: declare -f unpackPhase
: declare -f updateAutotoolsGnuConfigScriptsPhase

If you want to inspect the code of a given phase :

#+begin_src bash
declare -f configurePhase
#+end_src


To test each phase manually :

#+begin_src bash
unpackPhase # create xymon-4.3.30
cd xymon-4.3.30
configurePhase
buildPhase
installPhase
fixupPhase
cd ..
# results is in outputs
#+end_src



* Use cache
With ~--accept-flacke-config~, you use substituters defined in [[https://plmlab.math.cnrs.fr/nix/xymon-client/-/blob/main/flake.nix?ref_type=heads#L4-7][flake.nix#nixConfig]].

If you don't, you will rebuild locally ~xymon-client~.
